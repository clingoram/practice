/*
1024 NN乘法表
Description

相信大家小時候一定都有背過九九乘法表，就是從 1*1=1、1*2=2 一路背到 9*8=72、9*9=81

會需要背這個是因為九九乘法表可以涵蓋生活中大部分需要的數學，是很方便的技能

而在程式相關的領域，九九乘法表大概是大學一年級 C 語言第一堂或是第二堂課的作業之一

所以若是有自稱工程師的人寫不出九九乘法表，會是很尷尬的一件事

不過九九乘法表實在是太簡單了，我們可以把 9*9 擴展到 N * M，就是輸出：

1*1, 1*2...1*M
2*1, 2*2...2*M
....
N*1, N*2...N*M

簡單來說，N 代表 N 個數，M 代表每個數要乘到多少，例如說 N=2, M=3，就會是：

1*1, 1*2, 1*3
2*1, 2*2, 2*3

現在給你 N 以及 M，請你輸出 NM 乘法表會長什麼樣子


Input
輸入為兩行，第一行為一個數字 N，第二行為一個數字 M，1&lt;=N, M &lt;= 301<=N,M<=30

Output
請根據輸出範例的格式輸出 NM 乘法表


Sample Input 1
2
3

Sample Output 1
1*1=1
1*2=2
1*3=3

2*1=2
2*2=4
2*3=6


------------------------
N 代表 N 個數，M 代表每個數要乘到多少
*/
function nnCross(n1, n2) {
  for (let i = 1; i <= n1; i++) {
    for (let j = 1; j <= n2; j++) {
      console.log(`${i} * ${j} = ${i * j}`);
    }
  }
}
let n1 = 2;
let n2 = 3;
console.log(nnCross(n1, n2))